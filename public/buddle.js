var parser=function(e){var s={};function n(t){if(s[t])return s[t].exports;var o=s[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=s,n.d=function(e,s,t){n.o(e,s)||Object.defineProperty(e,s,{enumerable:!0,get:t})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,s){if(1&s&&(e=n(e)),8&s)return e;if(4&s&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&s&&"string"!=typeof e)for(var o in e)n.d(t,o,function(s){return e[s]}.bind(null,o));return t},n.n=function(e){var s=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(s,"a",s),s},n.o=function(e,s){return Object.prototype.hasOwnProperty.call(e,s)},n.p="",n(n.s=1)}([function(e,s,n){var t,o;t=this,o=function(){function e(s,n,t){return this.id=++e.highestId,this.name=s,this.symbols=n,this.postprocess=t,this}function s(e,s,n,t){this.rule=e,this.dot=s,this.reference=n,this.data=[],this.wantedBy=t,this.isComplete=this.dot===e.symbols.length}function n(e,s){this.grammar=e,this.index=s,this.states=[],this.wants={},this.scannable=[],this.completed={}}function t(e,s){this.rules=e,this.start=s||this.rules[0].name;var n=this.byName={};this.rules.forEach((function(e){n.hasOwnProperty(e.name)||(n[e.name]=[]),n[e.name].push(e)}))}function o(){this.reset("")}function r(e,s,r){if(e instanceof t){var i=e;r=s}else i=t.fromCompiled(e,s);for(var a in this.grammar=i,this.options={keepHistory:!1,lexer:i.lexer||new o},r||{})this.options[a]=r[a];this.lexer=this.options.lexer,this.lexerState=void 0;var l=new n(i,0);this.table=[l],l.wants[i.start]=[],l.predict(i.start),l.process(),this.current=0}return e.highestId=0,e.prototype.toString=function(e){function s(e){return e.literal?JSON.stringify(e.literal):e.type?"%"+e.type:e.toString()}var n=void 0===e?this.symbols.map(s).join(" "):this.symbols.slice(0,e).map(s).join(" ")+" ● "+this.symbols.slice(e).map(s).join(" ");return this.name+" → "+n},s.prototype.toString=function(){return"{"+this.rule.toString(this.dot)+"}, from: "+(this.reference||0)},s.prototype.nextState=function(e){var n=new s(this.rule,this.dot+1,this.reference,this.wantedBy);return n.left=this,n.right=e,n.isComplete&&(n.data=n.build(),n.right=void 0),n},s.prototype.build=function(){var e=[],s=this;do{e.push(s.right.data),s=s.left}while(s.left);return e.reverse(),e},s.prototype.finish=function(){this.rule.postprocess&&(this.data=this.rule.postprocess(this.data,this.reference,r.fail))},n.prototype.process=function(e){for(var s=this.states,n=this.wants,t=this.completed,o=0;o<s.length;o++){var i=s[o];if(i.isComplete){if(i.finish(),i.data!==r.fail){for(var a=i.wantedBy,l=a.length;l--;){var p=a[l];this.complete(p,i)}if(i.reference===this.index){var c=i.rule.name;(this.completed[c]=this.completed[c]||[]).push(i)}}}else{if("string"!=typeof(c=i.rule.symbols[i.dot])){this.scannable.push(i);continue}if(n[c]){if(n[c].push(i),t.hasOwnProperty(c)){var f=t[c];for(l=0;l<f.length;l++){var m=f[l];this.complete(i,m)}}}else n[c]=[i],this.predict(c)}}},n.prototype.predict=function(e){for(var n=this.grammar.byName[e]||[],t=0;t<n.length;t++){var o=n[t],r=this.wants[e],i=new s(o,0,this.index,r);this.states.push(i)}},n.prototype.complete=function(e,s){var n=e.nextState(s);this.states.push(n)},t.fromCompiled=function(s,n){var o=s.Lexer;s.ParserStart&&(n=s.ParserStart,s=s.ParserRules);var r=new t(s=s.map((function(s){return new e(s.name,s.symbols,s.postprocess)})),n);return r.lexer=o,r},o.prototype.reset=function(e,s){this.buffer=e,this.index=0,this.line=s?s.line:1,this.lastLineBreak=s?-s.col:0},o.prototype.next=function(){if(this.index<this.buffer.length){var e=this.buffer[this.index++];return"\n"===e&&(this.line+=1,this.lastLineBreak=this.index),{value:e}}},o.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak}},o.prototype.formatError=function(e,s){var n=this.buffer;if("string"==typeof n){var t=n.indexOf("\n",this.index);-1===t&&(t=n.length);var o=n.substring(this.lastLineBreak,t),r=this.index-this.lastLineBreak;return s+=" at line "+this.line+" col "+r+":\n\n",s+="  "+o+"\n",s+="  "+Array(r).join(" ")+"^"}return s+" at index "+(this.index-1)},r.fail={},r.prototype.feed=function(e){var s,t=this.lexer;for(t.reset(e,this.lexerState);s=t.next();){var r=this.table[this.current];this.options.keepHistory||delete this.table[this.current-1];var i=this.current+1,a=new n(this.grammar,i);this.table.push(a);for(var l=void 0!==s.text?s.text:s.value,p=t.constructor===o?s.value:s,c=r.scannable,f=c.length;f--;){var m=c[f],u=m.rule.symbols[m.dot];if(u.test?u.test(p):u.type?u.type===s.type:u.literal===l){var b=m.nextState({data:p,token:s,isToken:!0,reference:i-1});a.states.push(b)}}if(a.process(),0===a.states.length){var $=new Error(this.reportError(s));throw $.offset=this.current,$.token=s,$}this.options.keepHistory&&(r.lexerState=t.save()),this.current++}return r&&(this.lexerState=t.save()),this.results=this.finish(),this},r.prototype.reportError=function(e){var s=[],n=(e.type?e.type+" token: ":"")+JSON.stringify(void 0!==e.value?e.value:e);s.push(this.lexer.formatError(e,"Syntax error")),s.push("Unexpected "+n+". Instead, I was expecting to see one of the following:\n");var t=this.table.length-2;return this.table[t].states.filter((function(e){var s=e.rule.symbols[e.dot];return s&&"string"!=typeof s})).map((function(e){return this.buildFirstStateStack(e,[])||[e]}),this).forEach((function(e){var n=e[0],t=n.rule.symbols[n.dot],o=this.getSymbolDisplay(t);s.push("A "+o+" based on:"),this.displayStateStack(e,s)}),this),s.push(""),s.join("\n")},r.prototype.displayStateStack=function(e,s){for(var n,t=0,o=0;o<e.length;o++){var r=e[o],i=r.rule.toString(r.dot);i===n?t++:(t>0&&s.push("    ⬆ ︎"+t+" more lines identical to this"),t=0,s.push("    "+i)),n=i}},r.prototype.getSymbolDisplay=function(e){var s=typeof e;if("string"===s)return e;if("object"===s&&e.literal)return JSON.stringify(e.literal);if("object"===s&&e instanceof RegExp)return"character matching "+e;if("object"===s&&e.type)return e.type+" token";throw new Error("Unknown symbol type: "+e)},r.prototype.buildFirstStateStack=function(e,s){if(-1!==s.indexOf(e))return null;if(0===e.wantedBy.length)return[e];var n=e.wantedBy[0],t=[e].concat(s),o=this.buildFirstStateStack(n,t);return null===o?null:[e].concat(o)},r.prototype.save=function(){var e=this.table[this.current];return e.lexerState=this.lexerState,e},r.prototype.restore=function(e){var s=e.index;this.current=s,this.table[s]=e,this.table.splice(s+1),this.lexerState=e.lexerState,this.results=this.finish()},r.prototype.rewind=function(e){if(!this.options.keepHistory)throw new Error("set option `keepHistory` to enable rewinding");this.restore(this.table[e])},r.prototype.finish=function(){var e=[],s=this.grammar.start;return this.table[this.table.length-1].states.forEach((function(n){n.rule.name===s&&n.dot===n.rule.symbols.length&&0===n.reference&&n.data!==r.fail&&e.push(n)})),e.map((function(e){return e.data}))},{Parser:r,Grammar:t,Rule:e}},e.exports?e.exports=o():t.nearley=o()},function(e,s,n){"use strict";n.r(s),n.d(s,"parse",(function(){return r}));var t=n(0);const o=n(2);function r(e){const s=new t.Parser(t.Grammar.fromCompiled(o));return s.feed(e),s.results[0]}},function(e,s,n){!function(){function s(e){return e[0]}var n={Lexer:void 0,ParserRules:[{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","wschar"],postprocess:function(e){return e[0].concat([e[1]])}},{name:"_",symbols:["_$ebnf$1"],postprocess:function(e){return null}},{name:"__$ebnf$1",symbols:["wschar"]},{name:"__$ebnf$1",symbols:["__$ebnf$1","wschar"],postprocess:function(e){return e[0].concat([e[1]])}},{name:"__",symbols:["__$ebnf$1"],postprocess:function(e){return null}},{name:"wschar",symbols:[/[ \t\n\v\f]/],postprocess:s},{name:"unsigned_int$ebnf$1",symbols:[/[0-9]/]},{name:"unsigned_int$ebnf$1",symbols:["unsigned_int$ebnf$1",/[0-9]/],postprocess:function(e){return e[0].concat([e[1]])}},{name:"unsigned_int",symbols:["unsigned_int$ebnf$1"],postprocess:function(e){return parseInt(e[0].join(""))}},{name:"int$ebnf$1$subexpression$1",symbols:[{literal:"-"}]},{name:"int$ebnf$1$subexpression$1",symbols:[{literal:"+"}]},{name:"int$ebnf$1",symbols:["int$ebnf$1$subexpression$1"],postprocess:s},{name:"int$ebnf$1",symbols:[],postprocess:function(e){return null}},{name:"int$ebnf$2",symbols:[/[0-9]/]},{name:"int$ebnf$2",symbols:["int$ebnf$2",/[0-9]/],postprocess:function(e){return e[0].concat([e[1]])}},{name:"int",symbols:["int$ebnf$1","int$ebnf$2"],postprocess:function(e){return e[0]?parseInt(e[0][0]+e[1].join("")):parseInt(e[1].join(""))}},{name:"unsigned_decimal$ebnf$1",symbols:[/[0-9]/]},{name:"unsigned_decimal$ebnf$1",symbols:["unsigned_decimal$ebnf$1",/[0-9]/],postprocess:function(e){return e[0].concat([e[1]])}},{name:"unsigned_decimal$ebnf$2$subexpression$1$ebnf$1",symbols:[/[0-9]/]},{name:"unsigned_decimal$ebnf$2$subexpression$1$ebnf$1",symbols:["unsigned_decimal$ebnf$2$subexpression$1$ebnf$1",/[0-9]/],postprocess:function(e){return e[0].concat([e[1]])}},{name:"unsigned_decimal$ebnf$2$subexpression$1",symbols:[{literal:"."},"unsigned_decimal$ebnf$2$subexpression$1$ebnf$1"]},{name:"unsigned_decimal$ebnf$2",symbols:["unsigned_decimal$ebnf$2$subexpression$1"],postprocess:s},{name:"unsigned_decimal$ebnf$2",symbols:[],postprocess:function(e){return null}},{name:"unsigned_decimal",symbols:["unsigned_decimal$ebnf$1","unsigned_decimal$ebnf$2"],postprocess:function(e){return parseFloat(e[0].join("")+(e[1]?"."+e[1][1].join(""):""))}},{name:"decimal$ebnf$1",symbols:[{literal:"-"}],postprocess:s},{name:"decimal$ebnf$1",symbols:[],postprocess:function(e){return null}},{name:"decimal$ebnf$2",symbols:[/[0-9]/]},{name:"decimal$ebnf$2",symbols:["decimal$ebnf$2",/[0-9]/],postprocess:function(e){return e[0].concat([e[1]])}},{name:"decimal$ebnf$3$subexpression$1$ebnf$1",symbols:[/[0-9]/]},{name:"decimal$ebnf$3$subexpression$1$ebnf$1",symbols:["decimal$ebnf$3$subexpression$1$ebnf$1",/[0-9]/],postprocess:function(e){return e[0].concat([e[1]])}},{name:"decimal$ebnf$3$subexpression$1",symbols:[{literal:"."},"decimal$ebnf$3$subexpression$1$ebnf$1"]},{name:"decimal$ebnf$3",symbols:["decimal$ebnf$3$subexpression$1"],postprocess:s},{name:"decimal$ebnf$3",symbols:[],postprocess:function(e){return null}},{name:"decimal",symbols:["decimal$ebnf$1","decimal$ebnf$2","decimal$ebnf$3"],postprocess:function(e){return parseFloat((e[0]||"")+e[1].join("")+(e[2]?"."+e[2][1].join(""):""))}},{name:"percentage",symbols:["decimal",{literal:"%"}],postprocess:function(e){return e[0]/100}},{name:"jsonfloat$ebnf$1",symbols:[{literal:"-"}],postprocess:s},{name:"jsonfloat$ebnf$1",symbols:[],postprocess:function(e){return null}},{name:"jsonfloat$ebnf$2",symbols:[/[0-9]/]},{name:"jsonfloat$ebnf$2",symbols:["jsonfloat$ebnf$2",/[0-9]/],postprocess:function(e){return e[0].concat([e[1]])}},{name:"jsonfloat$ebnf$3$subexpression$1$ebnf$1",symbols:[/[0-9]/]},{name:"jsonfloat$ebnf$3$subexpression$1$ebnf$1",symbols:["jsonfloat$ebnf$3$subexpression$1$ebnf$1",/[0-9]/],postprocess:function(e){return e[0].concat([e[1]])}},{name:"jsonfloat$ebnf$3$subexpression$1",symbols:[{literal:"."},"jsonfloat$ebnf$3$subexpression$1$ebnf$1"]},{name:"jsonfloat$ebnf$3",symbols:["jsonfloat$ebnf$3$subexpression$1"],postprocess:s},{name:"jsonfloat$ebnf$3",symbols:[],postprocess:function(e){return null}},{name:"jsonfloat$ebnf$4$subexpression$1$ebnf$1",symbols:[/[+-]/],postprocess:s},{name:"jsonfloat$ebnf$4$subexpression$1$ebnf$1",symbols:[],postprocess:function(e){return null}},{name:"jsonfloat$ebnf$4$subexpression$1$ebnf$2",symbols:[/[0-9]/]},{name:"jsonfloat$ebnf$4$subexpression$1$ebnf$2",symbols:["jsonfloat$ebnf$4$subexpression$1$ebnf$2",/[0-9]/],postprocess:function(e){return e[0].concat([e[1]])}},{name:"jsonfloat$ebnf$4$subexpression$1",symbols:[/[eE]/,"jsonfloat$ebnf$4$subexpression$1$ebnf$1","jsonfloat$ebnf$4$subexpression$1$ebnf$2"]},{name:"jsonfloat$ebnf$4",symbols:["jsonfloat$ebnf$4$subexpression$1"],postprocess:s},{name:"jsonfloat$ebnf$4",symbols:[],postprocess:function(e){return null}},{name:"jsonfloat",symbols:["jsonfloat$ebnf$1","jsonfloat$ebnf$2","jsonfloat$ebnf$3","jsonfloat$ebnf$4"],postprocess:function(e){return parseFloat((e[0]||"")+e[1].join("")+(e[2]?"."+e[2][1].join(""):"")+(e[3]?"e"+(e[3][1]||"+")+e[3][2].join(""):""))}},{name:"dqstring$ebnf$1",symbols:[]},{name:"dqstring$ebnf$1",symbols:["dqstring$ebnf$1","dstrchar"],postprocess:function(e){return e[0].concat([e[1]])}},{name:"dqstring",symbols:[{literal:'"'},"dqstring$ebnf$1",{literal:'"'}],postprocess:function(e){return e[1].join("")}},{name:"sqstring$ebnf$1",symbols:[]},{name:"sqstring$ebnf$1",symbols:["sqstring$ebnf$1","sstrchar"],postprocess:function(e){return e[0].concat([e[1]])}},{name:"sqstring",symbols:[{literal:"'"},"sqstring$ebnf$1",{literal:"'"}],postprocess:function(e){return e[1].join("")}},{name:"btstring$ebnf$1",symbols:[]},{name:"btstring$ebnf$1",symbols:["btstring$ebnf$1",/[^`]/],postprocess:function(e){return e[0].concat([e[1]])}},{name:"btstring",symbols:[{literal:"`"},"btstring$ebnf$1",{literal:"`"}],postprocess:function(e){return e[1].join("")}},{name:"dstrchar",symbols:[/[^\\"\n]/],postprocess:s},{name:"dstrchar",symbols:[{literal:"\\"},"strescape"],postprocess:function(e){return JSON.parse('"'+e.join("")+'"')}},{name:"sstrchar",symbols:[/[^\\'\n]/],postprocess:s},{name:"sstrchar",symbols:[{literal:"\\"},"strescape"],postprocess:function(e){return JSON.parse('"'+e.join("")+'"')}},{name:"sstrchar$string$1",symbols:[{literal:"\\"},{literal:"'"}],postprocess:function(e){return e.join("")}},{name:"sstrchar",symbols:["sstrchar$string$1"],postprocess:function(e){return"'"}},{name:"strescape",symbols:[/["\\/bfnrt]/],postprocess:s},{name:"strescape",symbols:[{literal:"u"},/[a-fA-F0-9]/,/[a-fA-F0-9]/,/[a-fA-F0-9]/,/[a-fA-F0-9]/],postprocess:function(e){return e.join("")}},{name:"main",symbols:["arith_expr"],postprocess:s},{name:"main$string$1",symbols:[{literal:"i"},{literal:"f"}],postprocess:function(e){return e.join("")}},{name:"main",symbols:["main$string$1","_",{literal:"("},"_","boolean_expression","_",{literal:","},"_","arith_expr","_",{literal:","},"_","arith_expr","_",{literal:")"}],postprocess:e=>({type:"if",condition:e[4],trueExpr:e[8],falseExpr:e[12]})},{name:"boolean_expression",symbols:["or_expression"],postprocess:s},{name:"boolean_expression",symbols:[{literal:"("},"_","boolean_expression","_",{literal:")"}],postprocess:e=>({oper:"()",left:e[2]})},{name:"and_expression",symbols:["comparison_expression"],postprocess:s},{name:"and_expression$string$1",symbols:[{literal:"a"},{literal:"n"},{literal:"d"}],postprocess:function(e){return e.join("")}},{name:"and_expression",symbols:["comparison_expression","_","and_expression$string$1","_","boolean_expression"],postprocess:function(e){return{oper:e[2],left:e[0],right:e[4]}}},{name:"and_expression$string$2",symbols:[{literal:"a"},{literal:"n"},{literal:"d"}],postprocess:function(e){return e.join("")}},{name:"and_expression",symbols:["boolean_expression","_","and_expression$string$2","_","boolean_expression"],postprocess:function(e){return{oper:e[2],left:e[0],right:e[4]}}},{name:"or_expression",symbols:["and_expression"],postprocess:s},{name:"or_expression$string$1",symbols:[{literal:"o"},{literal:"r"}],postprocess:function(e){return e.join("")}},{name:"or_expression",symbols:["and_expression","_","or_expression$string$1","_","boolean_expression"],postprocess:function(e){return{oper:e[2],left:e[0],right:e[4]}}},{name:"or_expression$string$2",symbols:[{literal:"o"},{literal:"r"}],postprocess:function(e){return e.join("")}},{name:"or_expression",symbols:["boolean_expression","_","or_expression$string$2","_","boolean_expression"],postprocess:function(e){return{oper:e[2],left:e[0],right:e[4]}}},{name:"comparison_expression",symbols:["arith_expr","_","comparison_operator","_","arith_expr"],postprocess:e=>({oper:e[2],left:e[0],right:e[4]})},{name:"boolean_operator$string$1",symbols:[{literal:"a"},{literal:"n"},{literal:"d"}],postprocess:function(e){return e.join("")}},{name:"boolean_operator",symbols:["boolean_operator$string$1"],postprocess:s},{name:"boolean_operator$string$2",symbols:[{literal:"o"},{literal:"r"}],postprocess:function(e){return e.join("")}},{name:"boolean_operator",symbols:["boolean_operator$string$2"],postprocess:s},{name:"arith_expr",symbols:["unary_expression"],postprocess:s},{name:"arith_expr",symbols:["additive_expression"],postprocess:s},{name:"arith_expr",symbols:["multiplicative_expression"],postprocess:s},{name:"multiplicative_expression",symbols:["unary_expression","_",/[*/]/,"_","multiplicative_expression"],postprocess:function(e){return{oper:e[2],left:e[0],right:e[4]}}},{name:"multiplicative_expression",symbols:["unary_expression"],postprocess:s},{name:"additive_expression",symbols:["multiplicative_expression"],postprocess:s},{name:"additive_expression",symbols:["multiplicative_expression","_",/[+-]/,"_","additive_expression"],postprocess:function(e){return{oper:e[2],left:e[0],right:e[4]}}},{name:"unary_expression",symbols:["tableColumn"],postprocess:s},{name:"unary_expression",symbols:["int"],postprocess:s},{name:"unary_expression",symbols:["dqstring"],postprocess:s},{name:"unary_expression",symbols:["identifier","_",{literal:"("},"_","arith_expr","_",{literal:")"}],postprocess:e=>({type:"function",oper:e[0],left:e[4]})},{name:"unary_expression",symbols:[{literal:"("},"_","arith_expr","_",{literal:")"}],postprocess:e=>({oper:"()",left:e[2]})},{name:"comparison_operator",symbols:[{literal:">"}],postprocess:s},{name:"comparison_operator$string$1",symbols:[{literal:">"},{literal:"="}],postprocess:function(e){return e.join("")}},{name:"comparison_operator",symbols:["comparison_operator$string$1"],postprocess:s},{name:"comparison_operator",symbols:[{literal:"<"}],postprocess:s},{name:"comparison_operator$string$2",symbols:[{literal:"<"},{literal:"="}],postprocess:function(e){return e.join("")}},{name:"comparison_operator",symbols:["comparison_operator$string$2"],postprocess:s},{name:"comparison_operator$string$3",symbols:[{literal:"="},{literal:"="}],postprocess:function(e){return e.join("")}},{name:"comparison_operator",symbols:["comparison_operator$string$3"],postprocess:s},{name:"comparison_operator$string$4",symbols:[{literal:"<"},{literal:">"}],postprocess:function(e){return e.join("")}},{name:"comparison_operator",symbols:["comparison_operator$string$4"],postprocess:s},{name:"tableColumn$ebnf$1",symbols:[]},{name:"tableColumn$ebnf$1$subexpression$1",symbols:[{literal:"["},"_","identifier","_",{literal:"]"},{literal:"."}]},{name:"tableColumn$ebnf$1",symbols:["tableColumn$ebnf$1","tableColumn$ebnf$1$subexpression$1"],postprocess:function(e){return e[0].concat([e[1]])}},{name:"tableColumn",symbols:["tableColumn$ebnf$1",{literal:"["},"_","identifier","_",{literal:"]"}],postprocess:e=>e.join().replace(/[\[,\]]/g,"")},{name:"identifier$ebnf$1",symbols:[/[a-zA-Z0-9]/]},{name:"identifier$ebnf$1",symbols:["identifier$ebnf$1",/[a-zA-Z0-9]/],postprocess:function(e){return e[0].concat([e[1]])}},{name:"identifier",symbols:[/[a-zA-Z]/,"identifier$ebnf$1"],postprocess:e=>e[0]+e[1].join("")}],ParserStart:"main"};void 0!==e.exports?e.exports=n:window.grammar=n}()}]);